.DEFAULT_GOAL := help


BIN_DIR :=  $(shell pwd)/bin
GOLANGCI_LINT := $(BIN_DIR)/golangci-lint
GOLANGCI_LINT_VERSION := v2.5.0

MOCKERY := $(BIN_DIR)/mockery

$(BIN_DIR):
	mkdir -p $(BIN_DIR)

# Help command code generated by AI
help: ## Show this help message
	@echo "Available commands:"
	@grep -E '^[a-zA-Z_-]+:.*?## .*$$' $(MAKEFILE_LIST) | sort | \
		awk 'BEGIN {FS = ":.*?## "}; {printf "  \033[36m%-20s\033[0m %s\n", $$1, $$2}'

setup: $(GOLANGCI_LINT) $(MOCKERY) ## Setup the development environment
	@echo "Setup completed."

check: setup lint tests-unit ## Run all checks (lint, tests, etc)
	@echo "All checks passed."

db-migrate: ## Runs the database migration
	@echo "Migrating database"
	@go run tools/sql_lite_migration.go
	@echo "Database migration completed."

run: ## Run the server
	@echo "Running server"
	@go run main.go

lint: setup ## Run linters
	@$(GOLANGCI_LINT) run ./...
	@echo "Linting passed."

generate-mocks: setup ## Generate mocks for interfaces
	@echo "Generating mocks..."
	@$(MOCKERY) --config .mockery.yml

tests-unit: ## Run unit tests
	@echo "Running unit tests..."
	@go clean -testcache
	@go test -cover -covermode=count ./internal/...
	@echo "Unit tests completed."

#################################################
# DEPENDENCIES AREA
#################################################
$(GOLANGCI_LINT): | $(BIN_DIR)
	@echo "Instalando golangci-lint em $(BIN_DIR)..."
	@curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh \
		| sh -s -- -b $(BIN_DIR) $(GOLANGCI_LINT_VERSION)

$(MOCKERY): | $(BIN_DIR)
	@test -f $(MOCKERY) || { \
		echo ">>> Installing mockery..."; \
		GOBIN=$(BIN_DIR) go install github.com/vektra/mockery/v3@v3.5.5; \
	}

